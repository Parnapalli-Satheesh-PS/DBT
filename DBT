DBT
coding
testing
deployment
documentation
data lineage

Cloud

DWH
structured data
Data Lake
structured, semi structured, unstructured data 

SCD
SCD1 overwrite the data, new row added
SCD2 overwrite the data, new colum added
SCD3 new table will be created for historic data

Dataflow process
raw layer - raw_
staging layer - src_
core layer - dim_, fct_

seeds
files that are upload to the DWH from DBT
sources
abstraction layer on the top of your input tables.

AIRBNB.DEV.SCD_RAW_LISTINGS
Database.Schema.Table


Snapshots 
store historical state of rows in a table by recording the data as it changes.
For SCD2 tables snapshots will be implemented.

Tests

singular
defined in .sql files in your tests directory. The test consists of a SQL query that should return rows only when there is a failure or violation of the test condition.
generic 
1. unique: Ensures all values in a column are unique.
2. not_null: Ensures a column does not contain any NULL values.
3. accepted_values: Ensures a column contains only specific, predefined values.
4. relationships: Ensures that foreign key relationships are valid between tables.

syntax of CTE
WITH CTE AS
(
SELECT * FROM source.listings
)
SELECT
id AS listing_id,
room_type,
created_date
FROM raw_listings;

Macros
jinja templates creates in the macros folder

Test
special macro, can be used for implementing own generic tests.

Hooks
These are SQLs that executed at predefined times
configured on project, subfolder, model level

on_run_start: executed at the start of dbt {run,seed,snapshot}
on_run_end: executed at the end of dbt {run,seed,snapshot}
pre-hook: executed before a model/seed/snapshot is built
post-hook: executed after a model/seed/snapshot is buit
